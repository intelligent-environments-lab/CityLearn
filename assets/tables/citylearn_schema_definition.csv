Key,Definition
:code:`root_directory`,"Absolute path to directory that contains the data files including the schema. Can be :code:`null` if schema is supplied to :py:class:`citylearn.citylearn.CityLearnEnv` constructor as a filepath."
:code:`central_agent`,"Set to :code:`true` for centralized control architecture  else :code:`false`."
:code:`simulation_start_time_step`,"Time step in the data files to start the simulation from."
:code:`simulation_end_time_step`,"Time step in the data files to end the simulation at."
:code:`episode_time_steps`,"Either the number of time steps in an episode or list of episode start and end time steps between :code:`simulation_start_time_step` and :code:`simulation_end_time_step`"
:code:`rolling_episode_split`,"True if episode sequences are split such that each time step is a candidate for `episode_start_time_step` otherwise, False to split episodes in steps of `episode_time_steps`"
:code:`random_episode_split`,"True if episode splits are to be selected at random during training otherwise, False to select sequentially."
:code:`seconds_per_time_step`,"Used to define the time resolution of the data files."
:code:`observations`,"Used to define the observation space."
:code:`observations:<observation>:active`,"Set to :code:`true` if named :code:`<observation>` should be added to the observation space and provided to the agent  else :code:`false`."
:code:`observations:<observation>:shared_in_central_agent`,"Set to :code:`true` if if named :code:`<observation>` values will be common in all buildings."
:code:`actions`,"Used to define the action space."
:code:`actions:<action>:active`,"Set to :code:`true` if agent will provide named :code:`<action>` to environment."
:code:`agent`,"Used to define control algorithm to use in simulation."
:code:`agent:type`,"Control algorithm class in :py:mod:`citylearn.agents` or user-defined algorithm class path."
:code:`agent:attributes`,"Used to define attributes/hyperparameters that are used to construct control algorithm class specified in :code:`agent:type`."
:code:`agent:attributes:<attribute>`,"Value to set named :code:`<attribute>` to in control algorithm."
:code:`reward_function`,"Used to define reward function to use in simulation."
:code:`reward_function:type`,"Reward function class in :py:mod:`citylearn.reward_function` or user-defined reward function class path."
:code:`reward_function:attributes`,"Used to define attributes/hyperparameters that are used to construct reward function class specified in :code:`reward_function:type`."
:code:`reward_function:attributes:<attribute>`,"Value to set named :code:`<attribute>` to in reward function."
:code:`buildings`,"Used to define buildings to use in simulation."
:code:`buildings:<building_name>`,"Used to define the attributes of a building uniquely named :code:`<building_name>`."
:code:`buildings:<building_name>:include`,"Set to :code:`true` if :code:`<building_name>` should be included in simulation."
:code:`buildings:<building_name>:energy_simulation`,"Filename of building data file for :code:`<building_name>`. This file must be located in :code:`root_directory`."
:code:`buildings:<building_name>:weather`,"Filename of weather data file for :code:`<building_name>`. This file must be located in :code:`root_directory`."
:code:`buildings:<building_name>:carbon_intensity`,"Filename of carbon intensity data file for :code:`<building_name>`. This file must be located in :code:`root_directory`."
:code:`buildings:<building_name>:pricing`,"Filename of electricity pricing data file for :code:`<building_name>`. This file must be located in :code:`root_directory`."
:code:`buildings:<building_name>:type`,":code:`<building_name>` class in :py:mod:`citylearn.building` or user-defined building class path."
:code:`buildings:<building_name>:inactive_observations`,"List of building-specific inactive observations that overrides :code:`observations:<observation>:active`."
:code:`buildings:<building_name>:inactive_actions`,"List of building-specific inactive actions that overrides :code:`actions:<action>:active`."
:code:`buildings:<building_name>:<device>`,"Used to define a <device> for :code:`<building_name>`. :code:`<device>` can be :code:`cooling_device`, :code:`heating_device`, :code:`dhw_device`, :code:`cooling_storage`, :code:`heating_storage`, :code:`dhw_storage`, :code:`electrical_storage` or :code:`pv`."
:code:`buildings:<building_name>:<device>:type`,":code:`<device>` class in :py:mod:`citylearn.energy_model` or user-defined device class path."
:code:`buildings:<building_name>:<device>:autosize`,"Set to :code:`true` if the :code:`<device>` should be autosized for :code:`<building_name>` else :code:`false`."
:code:`buildings:<building_name>:<device>:autosize_attributes`,"Used to define attributes that are used to autosize :code:`<device>` class specified in :code:`buildings:<building_name>:<device>:type`."
:code:`buildings:<building_name>:<device>:autosize_attributes:<attribute>`,"Value to set named :code:`<attribute>` to autosize :code:`<device>` class specified in :code:`buildings:<building_name>:<device>:type`."
:code:`buildings:<building_name>:<device>:attributes`,"Used to define attributes that are used to construct :code:`<device>` class specified in :code:`buildings:<building_name>:<device>:type`."
:code:`buildings:<building_name>:<device>:attributes:<attribute>`,"Value to set named :code:`<attribute>` of :code:`<device>` class specified in :code:`buildings:<building_name>:<device>:type`."
:code:`buildings:<building_name>:dynamics`,"Used to define building temperature dynamics LSTM models."
:code:`buildings:<building_name>:dynamics:<mode>`,"Used to define building temperature dynamics LSTM model for specific HVAC mode where :code:`<mode>` may be :code:`cooling` or :code:`heating`."
:code:`buildings:<building_name>:dynamics:<mode>:type`,"Temperature dynamics class in :py:mod:`citylearn.dynamics` or user-defined dynamics class path."
:code:`buildings:<building_name>:dynamics:<mode>:attributes`,"Used to define attributes that are used to construct :code:`buildings:<building_name>:dynamics:<mode>:type`."
:code:`buildings:<building_name>:power_outage`,"Used to define power outage preferences and stochastic model."
:code:`buildings:<building_name>:power_outage:simulate_power_outage`,"Whether to allow time steps when the grid is unavailable and loads must be met using only the building's flexible resources."
:code:`buildings:<building_name>:power_outage:stochastic_power_outage`,"Whether to use a stochastic function to determine outage time steps otherwise, :py:class:`citylearn.building.Building.energy_simulation.power_outage` time series is used."
:code:`buildings:<building_name>:power_outage:stochastic_power_outage_model`,"Used to define stochastic power outage model."
:code:`buildings:<building_name>:power_outage:stochastic_power_outage_model:type`,"Stochastic power outage model in :py:mod:`citylearn.power_outage` or user-defined model class path."
:code:`buildings:<building_name>:power_outage:stochastic_power_outage_model:attributes`,"Used to define attributes/hyperparameters that are used to construct stochastic power outage model class in :code:`buildings:<building_name>:power_outage:stochastic_power_outage_model:type`."